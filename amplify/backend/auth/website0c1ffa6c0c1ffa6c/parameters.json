{
    "resourceNameTruncated": "websit0c1ffa6c",
    "userPoolName": "website0c1ffa6c_userpool_0c1ffa6c",
    "autoVerifiedAttributes": [
        "email"
    ],
    "mfaConfiguration": "OFF",
    "mfaTypes": [
        "SMS Text Message"
    ],
    "smsAuthenticationMessage": "Your authentication code is {####}",
    "smsVerificationMessage": "Your verification code is {####}",
    "emailVerificationSubject": "Your verification to Coders for Causes",
    "emailVerificationMessage": "Your verification code is {####}",
    "defaultPasswordPolicy": true,
    "passwordPolicyMinLength": "8",
    "passwordPolicyCharacters": [
        "Requires Lowercase",
        "Requires Uppercase",
        "Requires Numbers",
        "Requires Symbols"
    ],
    "requiredAttributes": [
        "family_name",
        "given_name"
    ],
    "userpoolClientGenerateSecret": true,
    "userpoolClientRefreshTokenValidity": "7",
    "userpoolClientWriteAttributes": [
        "email"
    ],
    "userpoolClientReadAttributes": [
        "email"
    ],
    "userpoolClientLambdaRole": "websit0c1ffa6c_userpoolclient_lambda_role",
    "userpoolClientSetAttributes": false,
    "useDefault": "manual",
    "authSelections": "userPoolOnly",
    "resourceName": "website0c1ffa6c0c1ffa6c",
    "usernameAttributes": [
        "email"
    ],
    "userPoolGroups": true,
    "adminQueries": false,
    "triggers": "{\"CustomMessage\":[\"verification-link\"]}",
    "hostedUI": true,
    "hostedUIDomainName": "website-prod",
    "authProvidersUserPool": [],
    "hostedUIProviderMeta": "[]",
    "oAuthMetadata": "{\"AllowedOAuthFlows\":[\"implicit\"],\"AllowedOAuthScopes\":[\"phone\",\"email\",\"openid\",\"profile\",\"aws.cognito.signin.user.admin\"],\"CallbackURLs\":[\"https://www.codersforcauses.org/signin/\"],\"LogoutURLs\":[\"https://www.codersforcauses.org/\"]}",
    "userPoolGroupList": [
        "exec",
        "committee"
    ],
    "verificationBucketName": "website0c1ffa6c0c1ffa6cverificationbucket",
    "authRoleArn": {
        "Fn::GetAtt": [
            "AuthRole",
            "Arn"
        ]
    },
    "unauthRoleArn": {
        "Fn::GetAtt": [
            "UnauthRole",
            "Arn"
        ]
    },
    "parentStack": {
        "Ref": "AWS::StackId"
    },
    "permissions": [],
    "dependsOn": [
        {
            "category": "function",
            "resourceName": "website0c1ffa6c0c1ffa6cCustomMessage",
            "triggerProvider": "Cognito",
            "attributes": [
                "Arn",
                "Name"
            ]
        }
    ]
}